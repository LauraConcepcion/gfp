= simple_form_for resource do |f|
  %div.errors
    = f.error_notification
  -if !resource.code_import.nil?
    = Classroom.human_attribute_name(:code_import) + ": " 
    = resource.try(:code_import)
  = f.input :name
  = f.association :profile, collection: current_teacher.profiles, :input_html => { :class => 'span5 chzn-select'}

  %h3= Student.model_name.pluralize
  %table.table.table-striped
    %thead
      %tr
        %th= Student.human_attribute_name(:name)
        %th= Student.human_attribute_name(:firstsurname)
        %th= Student.human_attribute_name(:secondsurname)
        %th= Student.human_attribute_name(:dni)
        %th= Student.human_attribute_name(:phone)
        %th= Student.human_attribute_name(:student_code)
        %th= Student.human_attribute_name(:birthdate)
        %th= Student.human_attribute_name(:mail)
        %th= Student.human_attribute_name(:record)
    %tbody#students.cocoon_with_chzn
      = f.simple_fields_for :students do |student|
        = render 'student_fields', :f => student
      %tr.links
        %td{:colspan => 99}= link_to_add_association t(:add_detail), f, :students, "data-association-insertion-node" => ".links", :class => 'btn'
  #actions_form
    = f.button :submit
    = link_to t(:cancel), collection_path, :class => 'btn'

-# - unless resource.new_record?
-#   %h3= t(:students_import)
-#   = link_to t(:example), "alumnos_ejemplo.csv"
-#   = form_tag csv_import_classroom_path(resource), :multipart => true do
-#     = file_field_tag :file, :accept => "text/csv"
-#     = submit_tag t(:import), :class => 'btn'
-# 

