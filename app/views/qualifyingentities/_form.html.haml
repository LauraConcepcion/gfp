= simple_form_for [parent, resource], :remote => request.xhr? do |f|
  %div.errors
    = f.error_notification
  = f.input :name
  - time = resource.created_at || Time.now
  = f.input :created_at, :as => :string, :input_html => { :class => 'datepicker input-medium', :value => (I18n.l(time, :format => :medium)) }
  - date = resource.date || Date.today
  = f.input :date, :as => :string, :input_html => { :class => 'datepicker input-small', :value => (I18n.l(date, :format => :default)) }
  = f.association :quarter
  = f.association :profile, :as => :hidden
  %h3= Qualifyingentity.human_attribute_name(:qualifyingentity_tlresults)
  %table.table.table-striped
    %thead
      %tr
        %th= QualifyingentityTlresult.human_attribute_name(:tlresult)
        %th= QualifyingentityTlresult.human_attribute_name(:percentage)
    %tbody#qualifyingentity_tlresults.cocoon_with_chzn
      = f.simple_fields_for :qualifyingentity_tlresults do |qualifyingentity_tlresult|
        = render 'qualifyingentity_tlresult_fields', :f => qualifyingentity_tlresult
      %tr.links
        %td{:colspan => 99}= link_to_add_association t(:add), f, :qualifyingentity_tlresults, "data-association-insertion-node" => ".links", :class => 'btn'
  = f.button :submit, :class => 'btn-primary'
  = link_to t(:cancel), profile_qualifyingentities_path(parent), :class => 'btn' unless request.xhr?
