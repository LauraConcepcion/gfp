.page-header
  %h1= t(:scores)
%div.scores
  .actions
    = link_to ClassroomDiary.model_name.human, profile_classroom_diaries_path(current_teacher.current_profile), :class => 'btn btn-default', :remote => true
    = link_to t(:new_qualifyingentity), new_profile_qualifyingentity_path(current_teacher.current_profile), :class => 'dialog btn btn-default', :remote => true
    - @quarters.each do |quarter|
      = link_to quarter.name, edit_scores_profile_path(current_teacher.current_profile, :quarter_id => quarter.id), :class => 'btn btn-primary'
  %table#qualifyingentity_tlresults_table
    %thead
      %tr.qualifyingentity_tlresults
        %th.name
          = Student.human_attribute_name(:name)
        %th.aux
          .qualifyingentity= link_to t(:new), new_profile_qualifyingentity_path(current_teacher.current_profile), :class => 'ui-icon icon-plus dialog', :remote => true
          = link_to t(:points), '#', :class => 'ui-icon icon-bookmark button', :alt => t(:points), :title => t(:points)
          = link_to t(:absences), '#', :class => 'ui-icon icon-exclamation-sign button', :alt => t(:absences), :title => t(:absences)
          = link_to t(:incidents), '#', :class => 'ui-icon icon-warning-sign button', :alt => t(:incidents), :title => t(:incidents)
          = link_to t(:observations), '#', :class => 'ui-icon icon-info-sign button', :alt => t(:observations), :title => t(:observations)
        - even_odd = cycle("even", "odd")
        - current_qe = nil
        - @qualifyingentity_tlresults.uniq.each do |qe_tlr|
          - even_odd = cycle("even", "odd") if qe_tlr.qualifyingentity != current_qe
          - tlr = qe_tlr.tlresult
          %th.tlresult{:class => "qualifyingentity #{even_odd} #{'qe_actions' if qe_tlr.qualifyingentity != current_qe}"}
            - if qe_tlr.qualifyingentity != current_qe
              .qualifyingentity
                -# = qe_title qe_tlr.qualifyingentity
                = link_to t(:edit), edit_profile_qualifyingentity_path(current_teacher.current_profile, qe_tlr.qualifyingentity), :class => 'ui-icon ui-icon-pencil dialog', :remote => true
                = link_to '#', :class => 'pop-over', "data-toogle" => "tooltip" , "data-content" => qe_title(qe_tlr.qualifyingentity), "title" => Qualifyingentity.model_name.human do
                  %i.icon-info-sign
            = link_to '#', :class => 'pop-over', "data-toogle" => "tooltip" , "data-content" => tlr.name, "title" => "Detalle" do
              = tlr.number
          - current_qe = qe_tlr.qualifyingentity
        - @ordered_unique_tlrs.each do |tlr|
          %th.score.average
            = link_to '#', :class => 'pop-over', "data-toogle" => "tooltip" , "data-content" => tlr.name, "title" => "Detalle" do
              = tlr.number
        %th.score.average.student
    %tbody
      - @students.each do |student|
        %tr{:id => "student_#{student.id}"}
          = show_for student do |student_show|
            %td.name
              = student_show.attribute :name, :label => false do
                = image_tag("student1.jpg")
                = link_to student.full_name, edit_student_path(student), :alt => t(:edit), :title => t(:edit), :remote => true
          %td.aux{:id => "aux_#{student.id}"}
            %span.aux1= render :partial => 'profiles/student_points', :locals => {:profile => resource, :student => student}
            %span.aux2= render :partial => 'profiles/student_absences', :locals => {:profile => resource, :student => student}
            %span.aux3= render :partial => 'profiles/student_incidents', :locals => {:profile => resource, :student => student}
            %span.aux4= render :partial => 'profiles/student_observations', :locals => {:profile => resource, :student => student}
          - even_odd = cycle("even", "odd")
          - current_qe = nil
          - @qualifyingentities.each do |qe|
            - qe.qualifyingentity_tlresults.each do |qe_tlr|
              - even_odd = cycle("even", "odd") if qe_tlr.qualifyingentity != current_qe
              - @score = qe_tlr.scores.find_by_student_id(student.id)
              %td.score{:id => @score.id, :class => "score qualifyingentity #{even_odd} #{'qe_actions' if qe_tlr.qualifyingentity != current_qe}"}
                = render 'scores/in_place_edit'
                - current_qe = qe_tlr.qualifyingentity
          - @ordered_unique_tlrs.each do |tlr|
            %td{:class => "score average", :id => "average_score_#{student.id}_#{tlr.id}"}
              = average_for(student, tlr, params[:quarter_id])
          - @average_score = AverageScore.where(:student_id => student.id, :tlresult_id => nil, :quarter_id => params[:quarter_id]).first
          %td{:class => "score average student", :id => "average_#{@average_score.id}"}
            = render 'average_scores/in_place_edit'

